openapi: 3.0.0
info:
  title: Anthropic API
  version: 0.36.3
  description: The official Anthropic API schema generated from TypeScript definitions
servers:
  - url: https://api.anthropic.com/v1
    description: Production server
paths:
  /messages:
    post:
      summary: Create a message
      description: Send a structured list of input messages and generate the next message in the conversation
      operationId: createMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageCreateParams'
      responses:
        200:
          description: Message created successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Message'
                  - $ref: '#/components/schemas/MessageStreamEvent'

components:
  schemas:
    ModelEnum:
      type: string
      enum:
        - claude-2.0
        - claude-2.1
        - claude-3-5-haiku-20241022
        - claude-3-5-haiku-latest
        - claude-3-5-sonnet-20240620
        - claude-3-5-sonnet-20241022
        - claude-3-5-sonnet-latest
        - claude-3-haiku-20240307
        - claude-3-opus-20240229
        - claude-3-opus-latest
        - claude-3-sonnet-20240229

    CacheControl:
      type: object
      properties:
        type:
          type: string
          const: ephemeral
      required:
        - type
      description: An object indicating that the response or block is ephemeral.

    CitationCharLocation:
      type: object
      properties:
        cited_text:
          type: string
        document_index:
          type: number
        document_title:
          type:
            - "null"
            - string
        end_char_index:
          type: number
        start_char_index:
          type: number
        type:
          type: string
          const: char_location
      required:
        - cited_text
        - document_index
        - document_title
        - end_char_index
        - start_char_index
        - type

    CitationContentBlockLocation:
      type: object
      properties:
        cited_text:
          type: string
        document_index:
          type: number
        document_title:
          type:
            - "null"
            - string
        end_block_index:
          type: number
        start_block_index:
          type: number
        type:
          type: string
          const: content_block_location
      required:
        - cited_text
        - document_index
        - document_title
        - end_block_index
        - start_block_index
        - type

    CitationPageLocation:
      type: object
      properties:
        cited_text:
          type: string
        document_index:
          type: number
        document_title:
          type:
            - "null"
            - string
        end_page_number:
          type: number
        start_page_number:
          type: number
        type:
          type: string
          const: page_location
      required:
        - cited_text
        - document_index
        - document_title
        - end_page_number
        - start_page_number
        - type

    Citation:
      oneOf:
        - $ref: '#/components/schemas/CitationCharLocation'
        - $ref: '#/components/schemas/CitationContentBlockLocation'
        - $ref: '#/components/schemas/CitationPageLocation'
      description: A citation supporting a text block.

    ContentBlockText:
      type: object
      properties:
        type:
          type: string
          const: text
        text:
          type: string
        cache_control:
          $ref: '#/components/schemas/CacheControl'
          nullable: true
        citations:
          type: array
          items:
            $ref: '#/components/schemas/Citation'
          nullable: true
      required:
        - type
        - text
      description: A text content block.

    Base64Source:
      type: object
      properties:
        type:
          type: string
          const: base64
        data:
          type: string
        media_type:
          type: string
      required:
        - type
        - data
        - media_type
      description: A base64-encoded source object (used in image or document blocks).

    ContentBlockImage:
      type: object
      properties:
        type:
          type: string
          const: image
        source:
          $ref: '#/components/schemas/Base64Source'
        cache_control:
          $ref: '#/components/schemas/CacheControl'
          nullable: true
      required:
        - type
        - source
      description: An image content block.

    ContentBlockToolUse:
      type: object
      properties:
        type:
          type: string
          const: tool_use
        id:
          type: string
        input: {}
        name:
          type: string
        cache_control:
          $ref: '#/components/schemas/CacheControl'
          nullable: true
      required:
        - type
        - id
        - input
        - name
      description: A content block indicating a tool invocation by the model.

    ContentBlockToolResult:
      type: object
      properties:
        type:
          type: string
          const: tool_result
        tool_use_id:
          type: string
        cache_control:
          $ref: '#/components/schemas/CacheControl'
          nullable: true
        content:
          oneOf:
            - type: array
              items:
                $ref: '#/components/schemas/ContentBlockText'
            - type: string
        is_error:
          type: boolean
      required:
        - type
        - tool_use_id
      description: A content block returning the result of a tool call.

    ContentBlockDocument:
      type: object
      properties:
        type:
          type: string
          const: document
        source:
          oneOf:
            - $ref: '#/components/schemas/Base64Source'
            - type: object
              properties:
                content:
                  oneOf:
                    - type: array
                      items:
                        $ref: '#/components/schemas/ContentBlockText'
                    - type: string
                type:
                  type: string
                  const: content
              required:
                - content
                - type
            - type: object
              properties:
                data:
                  type: string
                media_type:
                  type: string
                  const: text/plain
                type:
                  type: string
                  const: text
              required:
                - data
                - media_type
                - type
          description: The source can have multiple forms.
        cache_control:
          $ref: '#/components/schemas/CacheControl'
          nullable: true
        citations:
          type: object
          properties:
            enabled:
              type: boolean
            context:
              type:
                - "null"
                - string
            title:
              type:
                - "null"
                - string
          required:
            - enabled
      required:
        - type
        - source
      description: A content block representing a document.

    ContentBlock:
      oneOf:
        - $ref: '#/components/schemas/ContentBlockText'
        - $ref: '#/components/schemas/ContentBlockImage'
        - $ref: '#/components/schemas/ContentBlockToolUse'
        - $ref: '#/components/schemas/ContentBlockToolResult'
        - $ref: '#/components/schemas/ContentBlockDocument'
      description: A union of all possible content block types.

    MessageContent:
      oneOf:
        - type: string
        - type: array
          items:
            $ref: '#/components/schemas/ContentBlock'

    MessageItem:
      type: object
      properties:
        role:
          type: string
          enum: [assistant, user]
        content:
          $ref: '#/components/schemas/MessageContent'
      required:
        - role
        - content

    Metadata:
      type: object
      properties:
        user_id:
          type:
            - "null"
            - string
      additionalProperties: false
      description: An object describing metadata about the request.

    ToolChoiceAuto:
      type: object
      properties:
        type:
          type: string
          const: auto
        disable_parallel_tool_use:
          type: boolean
      required:
        - type

    ToolChoiceAny:
      type: object
      properties:
        type:
          type: string
          const: any
        disable_parallel_tool_use:
          type: boolean
      required:
        - type

    ToolChoiceTool:
      type: object
      properties:
        type:
          type: string
          const: tool
        name:
          type: string
        disable_parallel_tool_use:
          type: boolean
      required:
        - type
        - name

    ToolChoice:
      oneOf:
        - $ref: '#/components/schemas/ToolChoiceAuto'
        - $ref: '#/components/schemas/ToolChoiceAny'
        - $ref: '#/components/schemas/ToolChoiceTool'
      description: Specifies how the model should use provided tools.

    Tool:
      oneOf:
        - type: object
          properties:
            input_schema:
              type: object
              properties:
                type:
                  type: string
                  const: object
                properties: {}
              required:
                - type
              description: JSON schema for the tool input.
            name:
              type: string
            cache_control:
              $ref: '#/components/schemas/CacheControl'
              nullable: true
            description:
              type: string
          additionalProperties: false
          required:
            - input_schema
            - name
        - $ref: '#/components/schemas/BetaToolComputerUse20241022'
        - $ref: '#/components/schemas/BetaToolBash20241022'
        - $ref: '#/components/schemas/BetaToolTextEditor20241022'

    BetaToolBash20241022:
      type: object
      properties:
        name:
          type: string
          const: bash
          description: Name of the tool. This is how the tool will be called by the model and in tool_use blocks.
        type:
          type: string
          const: bash_20241022
        cache_control:
          $ref: '#/components/schemas/CacheControl'
          nullable: true
      required:
        - name
        - type

    BetaToolTextEditor20241022:
      type: object  
      properties:
        name:
          type: string
          const: str_replace_editor
          description: Name of the tool. This is how the tool will be called by the model and in tool_use blocks.
        type:
          type: string
          const: text_editor_20241022
        cache_control:
          $ref: '#/components/schemas/CacheControl'
          nullable: true
      required:
        - name
        - type

    BetaToolComputerUse20241022:
      type: object
      properties:
        name:
          type: string
          const: computer
          description: Name of the tool. This is how the tool will be called by the model and in tool_use blocks.
        type:
          type: string
          const: computer_20241022
        display_height_px:
          type: number
          description: The height of the display in pixels.
        display_width_px:
          type: number
          description: The width of the display in pixels.
        display_number:
          type:
            - "null"
            - number
          description: The X11 display number (e.g. 0, 1) for the display.
        cache_control:
          $ref: '#/components/schemas/CacheControl'
          nullable: true
      required:
        - name
        - type
        - display_height_px
        - display_width_px

    MessageCreateParamsBase:
      type: object
      required:
        - max_tokens
        - messages
        - model 
      properties:
        max_tokens:
          type: number
          description: |
            The maximum number of tokens to generate before stopping.
            
            Note that our models may stop _before_ reaching this maximum. This parameter only specifies the absolute maximum
            number of tokens to generate.

            Different models have different maximum values for this parameter.
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageItem'
          description: Input messages that provide context and history for the model's response.
        model:
          $ref: '#/components/schemas/ModelEnum'
          description: The model that will complete your response.
        metadata:
          $ref: '#/components/schemas/Metadata'
        stop_sequences:
          type: array
          items:
            type: string
          description: Custom text sequences that will cause the model to stop generating
        stream:
          type: boolean
          description: |
            Whether to incrementally stream the response using server-sent events.
            
            See [streaming](https://docs.anthropic.com/en/api/messages-streaming) for details.
        system:
          oneOf:
            - type: string
            - type: array
              items:
                $ref: '#/components/schemas/ContentBlockText'
          description: A system prompt, either as a raw string or as an array of text blocks.
        temperature:
          type: number
          description: Amount of randomness injected into the response
        tool_choice:
          $ref: '#/components/schemas/ToolChoice'
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tool'
        top_k:
          type: number 
        top_p:
          type: number

    MessageCreateParamsNonStreaming:
      allOf:
        - $ref: '#/components/schemas/MessageCreateParamsBase'
        - type: object
          properties:
            stream:
              type: boolean
              const: false

    MessageCreateParamsStreaming:
      allOf:
        - $ref: '#/components/schemas/MessageCreateParamsBase'
        - type: object
          properties:
            stream:
              type: boolean
              const: true
          required:
            - stream

    MessageCreateParams:
      oneOf:
        - $ref: '#/components/schemas/MessageCreateParamsNonStreaming'
        - $ref: '#/components/schemas/MessageCreateParamsStreaming'

    MessageStreamEvent:
      type: object
      description: Server-sent event stream
      properties:
        type:
          type: string
          enum: [message_start, message_delta, message_stop, content_block_start, content_block_delta, content_block_stop]
        message:
          $ref: '#/components/schemas/Message'
        delta:
          oneOf:
            - type: object
              properties:
                stop_reason:
                  type: string
                  enum: [end_turn, max_tokens, stop_sequence, tool_use, null]
                stop_sequence:
                  type: string
                  nullable: true
            - type: object
              properties:
                text:
                  type: string
                type:
                  type: string
                  const: text_delta
            - type: object
              properties:
                partial_json:
                  type: string
                type:
                  type: string
                  const: input_json_delta  
            - type: object
              properties:
                citation:
                  $ref: '#/components/schemas/Citation'
                type:
                  type: string
                  const: citations_delta
        usage:
          type: object
          properties:
            output_tokens:
              type: number
          required:
            - output_tokens
        index:
          type: number
        content_block:
          oneOf:
            - $ref: '#/components/schemas/ContentBlockText'
            - $ref: '#/components/schemas/ContentBlockToolUse'

    Message:
      type: object
      properties:
        id:
          type: string
          description: Unique object identifier (format and length may change over time).
        content:
          type: array
          items:
            $ref: '#/components/schemas/ContentBlock'
          description: Content generated by the model (an array of content blocks).
        model:
          $ref: '#/components/schemas/ModelEnum'
        role:
          type: string
          const: assistant
          description: Conversational role (always assistant in a response).
        stop_reason:
          oneOf:
            - type: string
              enum: [end_turn, max_tokens, stop_sequence, tool_use]
            - type: "null"
        stop_sequence:
          type:
            - "null"
            - string
        type:
          type: string
          const: message
        usage:
          type: object
          properties:
            cache_creation_input_tokens:
              type:
                - "null"
                - number
            cache_read_input_tokens:
              type:
                - "null"
                - number
            input_tokens:
              type: number
            output_tokens:
              type: number
          additionalProperties: false
          required:
            - cache_creation_input_tokens
            - cache_read_input_tokens
            - input_tokens
            - output_tokens
          description: Billing and rate-limit usage information.
      additionalProperties: false
      required:
        - id
        - content
        - model
        - role
        - stop_reason
        - stop_sequence
        - type
        - usage

    Usage:
      type: object
      properties:
        cache_creation_input_tokens:
          type:
            - "null"
            - number
        cache_read_input_tokens:
          type:
            - "null"
            - number
        input_tokens:
          type: number
        output_tokens:
          type: number
      additionalProperties: false
      required:
        - cache_creation_input_tokens
        - cache_read_input_tokens
        - input_tokens
        - output_tokens
